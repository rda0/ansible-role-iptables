#!/bin/bash

for n in ${nets} any; do
  echo -e "-N i-net-${n}"
  [[ "${allow_o_any}" != "true" ]] && echo -e "-N o-net-${n}"
  echo -e "-N f-net-${n}"
  for v in 4 6; do
    if [[ "${n}" == "any" ]]; then
      echo -e "-${v} -A INPUT   -j i-net-${n}"
      [[ "${allow_o_any}" != "true" ]] && echo -e "-${v} -A OUTPUT  -j o-net-${n}"
      [[ "${v}" == "4" ]] && echo -e "-${v} -A FORWARD -j f-net-${n}"
    elif [ -n "${net[${n}${v}]}" ]; then
      echo -e "-${v} -A INPUT   -m set --match-set ${n}${v} src -j i-net-${n}"
      [[ "${allow_o_any}" != "true" ]] && echo -e "-${v} -A OUTPUT  -m set --match-set ${n}${v} dst -j o-net-${n}"
      [[ "${v}" == "4" ]] && echo -e "-${v} -A FORWARD -m set --match-set ${n}${v} src -j f-net-${n}"
    fi
  done
  for proto in tcp udp; do
    for chain in i o; do
      if [ -n "${allow_port[${chain}_${proto}_${n}]}" ]; then
        for port in ${allow_port[${chain}_${proto}_${n}]}; do
          if [[ "${chain}" == "i" ]]; then
            echo -e "-A ${chain}-net-${n} -p ${proto} -m ${proto} --dport ${port} -j ACCEPT"
          elif [[ "${chain}" == "o" ]] && [[ "${allow_o_any}" != "true" ]]; then
            echo -e "-A ${chain}-net-${n} -p ${proto} -m ${proto} --dport ${port} -j ACCEPT"
          elif [[ "${chain}" == "f" ]]; then
            interface=""
            target_ip=""
            target_port=""
            interface="$(echo ${port} | cut -d':' -f1)"
            target_ip="$(echo ${port} | cut -d':' -f2)"
            target_port="$(echo ${port} | cut -d':' -f3)"
            echo -e "-4 -A ${chain}-net-${n} -i ${interface} -p ${proto} -m ${proto} -d ${target_ip} --dport ${target_port} -j ACCEPT"
          fi
        done
      fi
    done
  done
done

