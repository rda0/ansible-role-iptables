#!/bin/bash

if [[ "${RATE_LIMIT_SSH}" == "true" ]]; then
  echo -e "# Add chain for ssh rate limit"
  echo -e "-N i-ssh-rate"
  echo -e "-4 -A INPUT   -p tcp --dport 22 -m set ! --match-set admin4 src -j i-ssh-rate"
  echo -e "-6 -A INPUT   -p tcp --dport 22 -m set ! --match-set admin6 src -j i-ssh-rate"

  echo -e "# Track connection source in ssh-rate recent table"  
  echo -e "-A i-ssh-rate -p tcp --dport 22 -m recent --set --name ssh-rate"

  echo -e "# Check if source (trusted) exceeds threshold -> add to set block-ssh-trusted, log"
  echo -e "-A i-ssh-rate -p tcp --dport 22 -m set   --match-set trusted src -m recent --rcheck --rttl --seconds {{ iptables_ssh_rate_trusted_seconds|default('60') }} --hitcount {{ iptables_ssh_rate_trusted_hitcount|default('20') }} --name ssh-rate -j SET --add-set block-ssh-trusted src --exist"
  [[ "${LOG_LEVEL}" > 0 ]] && echo -e "-A i-ssh-rate -p tcp --dport 22 -m set   --match-set trusted src -m recent --rcheck --rttl --seconds {{ iptables_ssh_rate_trusted_seconds|default('60') }} --hitcount {{ iptables_ssh_rate_trusted_hitcount|default('20') }} --name ssh-rate -j LOG ${LOG_OPTS} \"[ipt-i]ssh-rate: \""

  echo -e "# Check if source (not trusted) exceeds threshold -> add to set block-ssh, log"
  echo -e "-A i-ssh-rate -p tcp --dport 22 -m set ! --match-set trusted src -m recent --rcheck --rttl --seconds {{ iptables_ssh_rate_seconds|default('120') }} --hitcount {{ iptables_ssh_rate_hitcount|default('5') }} --name ssh-rate -j SET --add-set block-ssh src --exist"
  [[ "${LOG_LEVEL}" > 0 ]] && echo -e "-A i-ssh-rate -p tcp --dport 22 -m set ! --match-set trusted src -m recent --rcheck --rttl --seconds {{ iptables_ssh_rate_seconds|default('120') }} --hitcount {{ iptables_ssh_rate_hitcount|default('5') }} --name ssh-rate -j LOG ${LOG_OPTS} \"[ipt-i]ssh-rate: \""

  echo -e "# Deny connections from sources in block-ssh* tables"
  if [[ "${DENY_TARGET_DROP}" != "true" ]]; then
    echo -e "-4 -A i-ssh-rate -m set --match-set block-ssh-trusted src -j REJECT --reject-with icmp-admin-prohibited"
    echo -e "-6 -A i-ssh-rate -m set --match-set block-ssh-trusted src -j REJECT --reject-with icmp6-adm-prohibited"
    echo -e "-4 -A i-ssh-rate -m set --match-set block-ssh         src -j REJECT --reject-with icmp-admin-prohibited"
    echo -e "-6 -A i-ssh-rate -m set --match-set block-ssh         src -j REJECT --reject-with icmp6-adm-prohibited"
  else
    echo -e "-4 -A i-ssh-rate -m set --match-set block-ssh-trusted src -j REJECT --reject-with icmp-admin-prohibited"
    echo -e "-6 -A i-ssh-rate -m set --match-set block-ssh-trusted src -j REJECT --reject-with icmp6-adm-prohibited"
    echo -e "-4 -A i-ssh-rate -m set --match-set block-ssh         src -j DROP"
    echo -e "-6 -A i-ssh-rate -m set --match-set block-ssh         src -j DROP"
  fi
fi

# echo -e "# Attempt to block portscans (this is probably a very bad idea -> DOS)"
# echo -e "# Anyone who tried to portscan us is locked out for {{ iptables_portscan_block_seconds|default('86400') }} s"
# [[ "${LOG_LEVEL}" > 2 ]] && echo -e "-A i-rate -m recent --name portscan --rcheck --seconds {{ iptables_portscan_block_seconds|default('86400') }} -j LOG ${LOG_OPTS} \"[ipt-i]scandrop: \""
# echo -e "-A i-rate -m recent --name portscan --rcheck --seconds {{ iptables_portscan_block_seconds|default('86400') }} -j DROP"
# echo -e "# Once the day has passed, remove them from the portscan list"
# echo -e "-A i-rate -m recent --name portscan --remove"
# echo -e "# These rules add scanners to the portscan list, and log the attempt."
# [[ "${LOG_LEVEL}" > 0 ]] && echo -e "-A i-rate -p tcp -m tcp --dport 139 -m recent --name portscan --set -j LOG ${LOG_OPTS} \"[ipt-i]portscan: \""
# echo -e "-A i-rate -p tcp -m tcp --dport 139 -m recent --name portscan --set -j DROP"
